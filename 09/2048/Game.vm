function Game.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
call Main.board_size 0
call Array.new 1
pop this 0
push pointer 0
return
function Game.init 0
push argument 0
pop pointer 0
push pointer 0
call Game.pop_new 1
pop temp 0
push constant 2
call MyMath.seed 1
pop temp 0
call Render.init 0
pop temp 0
push constant 0
return
function Game.pop_new 1
push argument 0
pop pointer 0
push constant 0
call Main.board_size 0
push constant 1
sub
call MyMath.randomInt 2
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Game.pop_new 1
pop temp 0
push constant 0
return
goto IF_END0
label IF_FALSE0
push local 0
push this 0
add
push constant 2
push constant 0
push constant 1
call MyMath.randomInt 2
call MyMath.exp 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_END0
function Game.index_2D 0
push argument 0
call Main.row_size 0
call Math.multiply 2
push argument 1
add
return
function Game.move_left 7
push argument 0
pop pointer 0
call Main.row_size 0
pop local 0
push local 0
call Array.new 1
pop local 1
label WHILE_EXP0
push local 2
push local 0
eq
not
not
if-goto WHILE_END0
push constant 0
pop local 4
push constant 0
pop local 3
push constant 0
pop local 5
label WHILE_EXP1
push local 3
push local 0
eq
not
not
if-goto WHILE_END1
push local 3
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 3
label WHILE_EXP2
push local 3
push local 0
eq
not
not
if-goto WHILE_END2
push local 2
push local 3
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 3
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push local 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push constant 1
sub
push local 1
add
push local 4
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 5
goto IF_END1
label IF_FALSE1
push local 4
push local 1
add
push local 2
push local 3
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push local 1
add
pop pointer 1
push that 0
pop local 5
push local 4
push constant 1
add
pop local 4
label IF_END1
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push local 0
eq
not
not
if-goto WHILE_END3
push local 2
push local 3
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push local 3
push local 1
add
pop pointer 1
push that 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 6
push local 2
push local 3
call Game.index_2D 2
push this 0
add
push local 3
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 1
call Array.dispose 1
pop temp 0
push local 6
return
function Game.flip_board_horizontal 4
push argument 0
pop pointer 0
call Main.row_size 0
pop local 2
call Main.board_size 0
call Array.new 1
pop local 3
label WHILE_EXP0
push local 0
push local 2
eq
not
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 2
eq
not
not
if-goto WHILE_END1
push local 0
push local 1
call Game.index_2D 2
push local 3
add
push local 0
push local 2
push local 1
sub
push constant 1
sub
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push local 3
pop this 0
push constant 0
return
function Game.move_right 1
push argument 0
pop pointer 0
push pointer 0
call Game.flip_board_horizontal 1
pop temp 0
push pointer 0
call Game.move_left 1
pop local 0
push pointer 0
call Game.flip_board_horizontal 1
pop temp 0
push local 0
return
function Game.turn_left 4
push argument 0
pop pointer 0
call Main.row_size 0
pop local 2
call Main.board_size 0
call Array.new 1
pop local 3
label WHILE_EXP0
push local 0
push local 2
eq
not
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 2
eq
not
not
if-goto WHILE_END1
push local 0
push local 1
call Game.index_2D 2
push local 3
add
push local 2
push local 1
sub
push constant 1
sub
push local 0
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push local 3
pop this 0
push constant 0
return
function Game.turn_right 4
push argument 0
pop pointer 0
call Main.row_size 0
pop local 2
call Main.board_size 0
call Array.new 1
pop local 3
label WHILE_EXP0
push local 0
push local 2
eq
not
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 2
eq
not
not
if-goto WHILE_END1
push local 0
push local 1
call Game.index_2D 2
push local 3
add
push local 1
push local 2
push local 0
sub
push constant 1
sub
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push local 3
pop this 0
push constant 0
return
function Game.move_up 1
push argument 0
pop pointer 0
push pointer 0
call Game.turn_right 1
pop temp 0
push pointer 0
call Game.move_left 1
pop local 0
push pointer 0
call Game.turn_left 1
pop temp 0
push local 0
return
function Game.move_down 1
push argument 0
pop pointer 0
push pointer 0
call Game.turn_left 1
pop temp 0
push pointer 0
call Game.move_left 1
pop local 0
push pointer 0
call Game.turn_right 1
pop temp 0
push local 0
return
function Game.is_over 3
push argument 0
pop pointer 0
call Main.row_size 0
pop local 0
label WHILE_EXP0
push local 1
push local 0
eq
not
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push local 0
eq
not
not
if-goto WHILE_END1
push local 1
push local 2
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 1
push local 0
push constant 1
sub
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push local 1
push constant 1
add
push local 2
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
label IF_FALSE1
push local 2
push local 0
push constant 1
sub
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push local 2
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
push local 1
push local 2
push constant 1
add
call Game.index_2D 2
push this 0
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
label IF_FALSE3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Game.full 1
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
call Main.board_size 0
eq
not
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Game.run 3
push argument 0
pop pointer 0
push pointer 0
call Game.init 1
pop temp 0
push this 0
call Render.render 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 1
push local 1
push this 1
eq
not
push local 1
push constant 0
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 84
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Game.full 1
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Game.pop_new 1
pop temp 0
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 130
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Game.move_left 1
pop local 2
push local 2
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Game.pop_new 1
pop temp 0
label IF_FALSE4
label IF_FALSE3
push local 1
push constant 131
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Game.move_up 1
pop local 2
push local 2
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
call Game.pop_new 1
pop temp 0
label IF_FALSE6
label IF_FALSE5
push local 1
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Game.move_right 1
pop local 2
push local 2
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
call Game.pop_new 1
pop temp 0
label IF_FALSE8
label IF_FALSE7
push local 1
push constant 133
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
call Game.move_down 1
pop local 2
push local 2
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
call Game.pop_new 1
pop temp 0
label IF_FALSE10
label IF_FALSE9
push this 0
call Render.render 1
pop temp 0
push pointer 0
call Game.is_over 1
pop local 0
label IF_FALSE0
push local 1
pop this 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
