// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=selAB0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=selCD0);
    Mux(a=selAB0, b=selCD0, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=selAB1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=selCD1);
    Mux(a=selAB1, b=selCD1, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=selAB2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=selCD2);
    Mux(a=selAB2, b=selCD2, sel=sel[1], out=out[2]);
    
    Mux(a=a[3], b=b[3], sel=sel[0], out=selAB3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=selCD3);
    Mux(a=selAB3, b=selCD3, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=selAB4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=selCD4);
    Mux(a=selAB4, b=selCD4, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=selAB5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=selCD5);
    Mux(a=selAB5, b=selCD5, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=selAB6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=selCD6);
    Mux(a=selAB6, b=selCD6, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=selAB7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=selCD7);
    Mux(a=selAB7, b=selCD7, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=selAB8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=selCD8);
    Mux(a=selAB8, b=selCD8, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=selAB9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=selCD9);
    Mux(a=selAB9, b=selCD9, sel=sel[1], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=selAB10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=selCD10);
    Mux(a=selAB10, b=selCD10, sel=sel[1], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=selAB11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=selCD11);
    Mux(a=selAB11, b=selCD11, sel=sel[1], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=selAB12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=selCD12);
    Mux(a=selAB12, b=selCD12, sel=sel[1], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=selAB13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=selCD13);
    Mux(a=selAB13, b=selCD13, sel=sel[1], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=selAB14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=selCD14);
    Mux(a=selAB14, b=selCD14, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=selAB15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=selCD15);
    Mux(a=selAB15, b=selCD15, sel=sel[1], out=out[15]);
}